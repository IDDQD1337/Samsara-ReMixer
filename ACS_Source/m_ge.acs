str GuardTypes[14] = { "ArmorGuard", "BlueCamGuard", "CamGuard", "CommGuard", "GrayGuard", "GreatGuard2", "GreatGuard", "MoonFemale", "MoonGuard", "NavyGuard", "OliveGuard", "Ourumov", "RusGuard", "TrevGuard" };
str HeadTypes[29] = { "Alan", "B", "Chris", "Dave", "Des", "Duncan", "Dwayne", "Graeme", "Grant", "Jim", "Joel", "Joe2", "Joe", "Karl", "Ken", "Lee", "Mandy", "Marion", "Mark", "Martin", "Neil", "Pete", "Robin", "Sally", "Scott", "Shaun", "Stevee", "Steveh", "Vivien" };
str HatTypes[13] = { "NoHat", "BeretBlack", "BeretBlue", "BeretRed", "FurHatBlack", "FurHatBlue", "FurHatBrown", "HelmetGray", "HelmetGreen", "MoonHeadGear", "PeakedCap", "SideHatDarkGreen", "SideHatLightGreen" };
str GunTypes[24] = { "KF7", "DualAR33", "AR33", "AutoShotgun", "DualCougar", "Cougar", "DualD5k", "D5k", "DualDD44", "DD44", "GrenadeLauncher", "DualKlobb", "Klobb", "Laser", "DualPhantom", "Phantom", "PP7", "RCP90", "RocketLauncher", "SiberianCombo", "Sniper", "XeniaCombo", "DualZMG", "ZMG" };

function int SetPointerExt(int assign_slot, int tid, int assign_to_tid) 
{
	int a = ActivatorTID(); // Get original activator tid if there is an activator (I have ASSUMED that it returns 0 if there is no activator)
	Thing_ChangeTID(0, UniqueTID()); // Create temporary, unique activator tid
	int temp = ActivatorTID(); // Get temporary activator tid (0 if there is no activator)

	if(SetActivator(assign_to_tid)) 
		SetPointer(assign_slot, temp); // If an activator (assign_to_tid) is set, assign a pointer value to it.
	if(SetActivator(temp)) 
		Thing_ChangeTID(0, a); // If an activator (temp) is set, restore its original tid (a).
		
	return 0;
}

Script "Goldeneye_HatShot" (void)
{
	if(CheckInventory("Goldeneye_HatShotToken"))
		terminate;
	
	GiveInventory("Goldeneye_HatShotToken",1);
	int a;
	str thisclass = GetActorClass(0);
	str pass, body, head, sunglasses, hat, thrownhat, gun, newclass;
	if(strcmp(thisclass,"Goldeneye_",StrLen("Goldeneye_")) != 0)
		terminate;
		
	pass = StrRight(thisclass, StrLen(thisclass)-StrLen("Goldeneye_"));
	for(a = 0; a < 14; a++)
	{
		if(strcmp(GuardTypes[a],pass,StrLen(GuardTypes[a])) == 0)
		{
			body = GuardTypes[a];
			break;
		}
	}
	if(strlen(body) == 0)
		terminate;
		
	newclass = StrParam(s:"Goldeneye_",s:body,s:"_");
	pass = StrRight(thisclass,StrLen(thisclass)-StrLen(newclass));
	for(a = 0; a < 29; a++)
	{
		if(strcmp(HeadTypes[a],pass,StrLen(HeadTypes[a])) == 0)
		{
			head = HeadTypes[a];
			break;
		}
	}
	newclass = StrParam(s:"Goldeneye_",s:body,s:"_",s:head);
	pass = StrRight(thisclass,StrLen(thisclass)-StrLen(newclass));
	
	if(strcmp("-SG",pass,StrLen("-SG")) == 0)
		sunglasses = "-SG";		
	newclass = StrParam(s:"Goldeneye_",s:body,s:"_",s:head,s:sunglasses,s:"_");
	
	pass = StrRight(thisclass,StrLen(thisclass)-StrLen(newclass));	
	
	if(strcmp(pass,HatTypes[0],StrLen(HatTypes[0])) == 0)
		terminate;

	for(a = 0; a < 13; a++)
	{
		if(strcmp(HatTypes[a],pass,StrLen(HatTypes[a])) == 0)
		{
			thrownhat = HatTypes[a];
			hat = "NoHat";
			if(thrownhat == "HelmetGray" || thrownhat == "HelmetGreen")
			{
				SetResultValue(-1);
				PlaySound(0,"Goldeneye/SlapperMetal",CHAN_7,1.0,0,ATTN_NORM);
				if(random(0,1) == 1)
				{
					terminate;
				}
			}
			else
				SetResultValue(3);
			break;
		}
	}
	newclass = StrParam(s:"Goldeneye_",s:body,s:"_",s:head,s:sunglasses,s:"_",s:thrownhat,s:"_");
	
	pass = StrRight(thisclass,StrLen(thisclass)-StrLen(newclass));
	for(a = 0; a < 24; a++)
	{
		if(strcmp(GunTypes[a],pass,StrLen(GunTypes[a])) == 0)
		{
			gun = GunTypes[a];
			break;
		}
	}
	newclass = StrParam(s:"Goldeneye_",s:body,s:"_",s:head,s:sunglasses,s:"_",s:hat,s:"_",s:gun);
	
	int hattid = ActivatorTid();
	int newhattid = UniqueTid();
	int hatlesstid = UniqueTid();
	int health = GetActorProperty(0,APROP_Health);
	Thing_ChangeTID(hattid, newhattid);
	SpawnSpotFacingForced(newclass,newhattid,hatlesstid);
	SpawnForced(StrParam(s:"Goldeneye_",s:thrownhat),GetActorX(0),GetActorY(0),GetActorZ(0) + 48.0,0,0);
	SetActorProperty(hatlesstid,APROP_Health,health);
	SetActivator(0,AAPTR_MASTER);
	SetPointerExt(AAPTR_MASTER,0,hatlesstid);
	SetActivator(newhattid);
	SetActivator(0,AAPTR_TARGET);
	SetPointerExt(AAPTR_TARGET,0,hatlesstid);
	SetActivator(newhattid);
	Thing_ChangeTID(newhattid, hattid);
	Thing_ChangeTID(hatlesstid, hattid);
	Thing_Remove(0);
	SetActivator(hattid,AAPTR_MASTER);
}

Script "GoldeneyePartPositioner" (void) clientside
{
	int angle;
	while(ClassifyActor(0) != 1)
	{
		angle = GetActorAngle(0);
		//SetActorPosition(newtid,GetActorX(0),GetActorY(0),GetActorZ(0),0);
		Warp(AAPTR_MASTER,0,0,0,angle,WARPF_NOCHECKPOSITION|WARPF_USEPTR|WARPF_COPYINTERPOLATION);
		Delay(1);
	}
}

Script "GoldeneyeEnemyPartsPicker" (int type)
{
	int newtid = UniqueTID();
	int bodytid = UniqueTID();
	int headtid = UniqueTID();
	int activator = ActivatorTID();
	
	Thing_ChangeTID(activator, newtid);
	SpawnForced("Goldeneye_GreatGuard2",0,0,0,bodytid);
	SetActivator(bodytid,AAPTR_DEFAULT);
	SetPointer(AAPTR_MASTER,newtid);
	SpawnForced("Goldeneye_Alan_NoShades",0,0,0,headtid);
	SetActivator(headtid,AAPTR_DEFAULT);
	SetPointer(AAPTR_MASTER,newtid);
}

Script "GoldeneyePartBroadcast" (int state)
{
	switch(state)
	{
		case 1:
			SetActorState(0,"Spawn2",true);
			break;
		case 2:
			SetActorState(0,"SeeTwoHand",true);
			break;
	}
}