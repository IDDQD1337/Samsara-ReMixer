Actor POGreedPlayer2 : POGreedPlayer replaces POGreedPlayer {
	States {
		Pain.RoTT_Net:
			TNT1 A 0 ACS_NamedExecuteAlways("RoTTNet", 0)
			Goto Super::Pain
		Pain.Grip:
			TNT1 A 0 A_JumpIfInventory("AlreadyGripped", 1, 4)
			TNT1 A 0 ThrustThingZ(0,50,0,0)
			TNT1 A 0 A_GiveInventory("AlreadyGripped", 1)
			TNT1 A 0 ACS_NamedExecuteAlways("DFJerecGrip")
			TNT1 A 0
			Goto Super::Pain
		Pain.DukeEnforcerSpit:
			TNT1 A 0 ACS_NamedExecuteAlways("DukeEnforcerSpit", 0)
			Goto Super::Pain	
		Pain.Hexen2MezzoDamage:
			TNT1 A 0 A_Jump(192,"Pain")
			TNT1 A 0 A_SpawnItemEx("Hexen2GibSpawner",0,0,0,0,0,0,0,SXF_USEBLOODCOLOR|SXF_NOCHECKPOSITION|SXF_SETMASTER)
			Goto Super::Pain			
		Death.ShadowHoundBite:
			TNT1 A 0 ACS_NamedExecuteAlways("WitchHoundBite", 0)
			Goto Super::Death		
		Death.DarkSide:
			TNT1 A 0 ACS_NamedExecuteAlways("DFSummonClone")
			TNT1 A 0 A_GiveInventory("IPOGPlayerDeathSoundTrigger")
			TNT1 A 5 A_NoBlocking
			TNT1 A -1
			stop	
		Death:
			TNT1 A 0 A_SpawnItem("UniversalBloodyHellGoreDeathEffect")
			TNT1 A 0 A_TakeInventory("AmAlreadyChoked",1)
			TNT1 A 0 A_TakeInventory("Chokeme",1)	  				
			Goto DeathAnim		
	    XDeath:
			TNT1 A 0 A_SpawnItem("UniversalBloodyHellGoreXDeathEffect")
			TNT1 A 0 A_TakeInventory("AmAlreadyChoked",1)
			TNT1 A 0 A_TakeInventory("Chokeme",1)	  						
			Goto DeathAnim	
		Pain:
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Super::Pain
		Melee:
			TNT1 A 0 A_GiveInventory("Hexen2EnemyFireDetector",1)
			TNT1 A 0 A_JumpIfInventory("IPoGMode",4,"MeleeDominatrix")
			TNT1 A 0 A_JumpIfInventory("IPoGMode",3,"MeleeSpecimen")
			TNT1 A 0 A_JumpIfInventory("IPoGMode",2,"MeleeLizard")
			TNT1 A 0 A_JumpIfInventory("IPoGMode",1,"MeleeCyborg")
			GPL0 D 3
			GPL0 E 3 Bright
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		MeleeCyborg:
			GPL2 D 6 Bright
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		MeleeLizard:
			GPL3 D 6 Bright
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		MeleeSpecimen:
			GPL4 D 6 Bright
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		MeleeDominatrix:
			GPL5 D 6 Bright
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		Missile:
			TNT1 A 0 A_GiveInventory("Hexen2EnemyFireDetector",1)
			TNT1 A 0 A_JumpIfInventory("IPoGMode",4,"MissileDominatrix")
			TNT1 A 0 A_JumpIfInventory("IPoGMode",3,"MissileSpecimen")
			TNT1 A 0 A_JumpIfInventory("IPoGMode",2,"MissileLizard")
			TNT1 A 0 A_JumpIfInventory("IPoGMode",1,"MissileCyborg")
			GPL0 F 6
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		MissileCyborg:
			GPL2 E 6
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		MissileLizard:
			GPL3 E 6
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		MissileSpecimen:
			GPL4 E 6
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		MissileDominatrix:
			GPL5 E 6
			TNT1 A 0 A_TakeInventory("Hexen2EnemyFireDetector",1)
			Goto Spawn
		Death.RottExplosive:
			TNT1 A 0 A_TakeInventory("AmAlreadyChoked",1)
			TNT1 A 0 A_TakeInventory("Chokeme",1)
			Goto Super::Death.RottExplosive			
		Disintegrate:
			TNT1 A 0 A_TakeInventory("AmAlreadyChoked",1)
			TNT1 A 0 A_TakeInventory("Chokeme",1)
			Goto Super::Disintegrate									
	}
}