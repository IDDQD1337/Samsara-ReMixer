Actor SamsaraMixerMonsterDeathScriptToken : Inventory { Inventory.MaxAmount 1024 }

ACTOR SamsaraMixerLoadedToken
{
	Height 2
	Radius 1
	+NOINTERACTION
	+NOTELEPORT
	States
	{
		Spawn:
			TNT1 A 35
			Stop
	}
}

ACTOR MultiplyOverflowToken : Inventory { Inventory.MaxAmount 1 }
ACTOR SetSeedToken : Inventory { Inventory.MaxAmount 28 }
ACTOR MultiplyToken : Inventory { Inventory.MaxAmount 20 }
ACTOR AssholeToken : Inventory { Inventory.MaxAmount 1 }
ACTOR DifficultyToken : Inventory { Inventory.MaxAmount 4 }
ACTOR InvasionToken : Inventory { Inventory.MaxAmount 1 }
ACTOR WeaponDropToken : Inventory { Inventory.MaxAmount 1 }

//ReMixer generator logic

Actor DetermineValidCellReMixer
{
	+VULNERABLE
	+CANPASS
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_GiveInventory("isCellCheckerTokenReMixer",1)
			TNT1 A 0 A_RadiusGive("DetermineValidCellBroadcastReMixer",1024,RGF_PLAYERS|RGF_MONSTERS|RGF_NOSIGHT|RGF_CUBE)
			TNT1 A 4
			Stop
	}
}

Actor DetermineValidCellBroadcastReMixer : Trigger
{
	States
	{
		Pickup:	
			TNT1 A 0 A_RadiusGive("IsValidCellBroadcastReMixer",1024,RGF_OBJECTS|RGF_NOSIGHT|RGF_CUBE)
			Stop
	}
}

Actor IsValidCellBroadcastReMixer : Trigger
{
	States
	{
		Pickup:
			TNT1 A 0 A_JumpIfInventory("isCellCheckerTokenReMixer",1,1)
			fail
			TNT1 A 0 ACS_NamedExecuteWithResult("CellDoneScanningReMixer")
			TNT1 A 0 Thing_Remove(0)
			Stop
	}
}

Actor DetermineValidSpawnReMixer
{
	Height 56
	Radius 32
	+VULNERABLE
	+SOLID
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_GiveInventory("isSpawnCheckerTokenReMixer",1)
			TNT1 A 0 A_RadiusGive("DetermineValidSpawnBroadcastReMixer",1024,RGF_PLAYERS|RGF_MONSTERS|RGF_CUBE)
			TNT1 A 0 A_UnsetSolid
			TNT1 A 4
			Stop
	}
}

Actor DetermineValidSpawnBroadcastReMixer : Trigger
{
	States
	{
		Pickup:	
			TNT1 A 0 A_RadiusGive("IsValidSpawnBroadcastReMixer",1024,RGF_OBJECTS|RGF_CUBE)
			Stop
	}
}

Actor IsValidSpawnBroadcastReMixer : Trigger
{
	States
	{
		Pickup:
			TNT1 A 0 A_JumpIfInventory("isSpawnCheckerTokenReMixer",1,1)
			fail
			TNT1 A 0 A_CheckRange(256,"Generate")
			Stop
		Generate:
			TNT1 A 0 A_JumpIfInventory("ValidSpawnTokenReMixer",1,"Failure")
			TNT1 A 0 A_GiveInventory("ValidSpawnTokenReMixer",1)
			TNT1 A 0 ACS_NamedExecuteWithResult("SMMGeneratorSelector")
			Stop
		Failure:
			TNT1 A 0
			fail
	}
}

Actor isCellCheckerTokenReMixer : Inventory { Inventory.MaxAmount 1 }
Actor isSpawnCheckerTokenReMixer : Inventory { Inventory.MaxAmount 1 }
Actor ValidSpawnTokenReMixer : Inventory { Inventory.MaxAmount 1 }

/*ACTOR PinataDrop : RandomSpawner
{
	dropitem "Ammo1Small" 255 256
	dropitem "Ammo2Small" 255 256
	dropitem "AmmoBackpack" 255 64
	dropitem "Ammo3Small" 255 128
	dropitem "Ammo4Small" 255 128
	dropitem "HealPack1" 255 128
	dropitem "HealPack2" 255 64
	dropitem "SamsaraSlotOneDrop" 255 32
	dropitem "SamsaraSlotTwoDrop" 255 32
	dropitem "Ammo1Big" 255 16
	dropitem "Ammo2Big" 255 16
	dropitem "Visor" 255 16
	dropitem "ArmorPack" 255 16
	dropitem "SamsaraSlotThreeDrop" 255 16
	dropitem "Ammo3Big" 255 8
	dropitem "Ammo4Big" 255 8
	dropitem "ArmorPack" 255 8
	dropitem "SuperHealt2" 70 8
	dropitem "PartialInvisibility" 255 8
	dropitem "SamsaraSlotFourDrop" 115 8
	dropitem "MegaPack" 45 8
	dropitem "SamsaraSlotFiveDrop" 110 4
	dropitem "InvulnPowerup" 55 4
	dropitem "BioSuit" 255 2
	dropitem "SamsaraSlotSixDrop" 110 2
	dropitem "SamsaraUniquePickup64" 100 2
	dropitem "SamsaraSlotSevenDrop" 80 1
	dropitem "HeXenBeaconItem" 105 1
}

ACTOR DefaultPinataPop
{
	+DROPPED
	DropItem "PinataDrop"
	States
	{
		Spawn:
			TNT1 A 0
			Goto Death
		Death:
			TNT1 A 0
			TNT1 A 1 A_JumpIf(ACS_NamedExecuteWithResult("ReMixerCVarCheck",5) == 0, "Death2")
			TNT1 AAAAA 0 A_SpawnItemEx("DefaultPinataPop2",0,0,0,random(-10,10),random(-10,10),random(-10,10),0,32)
			Stop
		Death2:
			TNT1 A 5
			Stop
	}
}

ACTOR DefaultPinataPop2
{
	+DROPPED
	DropItem "PinataDrop"
	States
	{
		Spawn:
			TNT1 A 0
			Goto Death
		Death:
			TNT1 A 5
			TNT1 A 0 A_NoBlocking
			Stop
	}
}*/

ACTOR InvisibleToken : CustomInventory
{
	-COUNTITEM
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
		Spawn:
			TNT1 A 0 
			TNT1 A 1
			Stop
		Pickup:
			TNT1 A 0 
			TNT1 A 1 A_ChangeFlag("STEALTH",1)
			Stop
	}
}

ACTOR RemoveChildrenToken : CustomInventory
{
	-COUNTITEM
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
		Spawn:
			TNT1 A 0 
			TNT1 A 1
			Stop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_RemoveChildren(True)
			TNT1 A 1
			Stop
	}
}

ACTOR ThruSpeciesToken : CustomInventory
{
	-COUNTITEM
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
		Spawn:
			TNT1 A 0 
			TNT1 A 1
			Stop
		Pickup:
			TNT1 A 0 
			TNT1 A 1 A_ChangeFlag("THRUSPECIES",1)
			Stop
	}
}

ACTOR GravityToken : CustomInventory
{
	-COUNTITEM
	+INVENTORY.ALWAYSPICKUP
	Inventory.PickupMessage ""
	Inventory.PickupSound ""
	States
	{
		Spawn:
			TNT1 A 0 
			TNT1 A 1
			Stop
		Pickup:
			TNT1 A 0 
			TNT1 A 0 A_ChangeFlag("NOGRAVITY",0)
			Stop
	}
}

//Duke Shrapnel

ACTOR DukeShrapnel1 : DukeGibs1
{
	Health 1
	States
	{
		Spawn:
			DKS2 ABCD 5
			Loop
		Death:
			DKS2 B 2100 A_Gravity
			DKS2 B 10 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate",31) == 1, "Death")
			Stop
	}
}

ACTOR DukeShrapnel2 : DukeGibs1
{
	Health 1
	States
	{
		Spawn:
			DKS3 ABCD 5
			Loop
		Death:
			DKS3 A 2100 A_Gravity
			DKS3 A 10 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate",31) == 1, "Death")
			Stop
	}
}

ACTOR DukeShrapnel3 : DukeGibs1
{
	Health 1
	States
	{
		Spawn:
			DKS4 ABCD 5
			Loop
		Death:
			DKS4 D 2100 A_Gravity
			DKS4 D 10 A_JumpIf(ACS_NamedExecuteWithResult("SamsaraDecorate",31) == 1, "Death")
			Stop
	}
}